name: main

on:
  push:
    branches:
      - code_quality
      - master
  pull_request:
    branches: [master]
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    # let's make sure our "app" works on several versions of Node
    strategy:
      matrix:
        node: [14]
    steps:
      - uses: actions/checkout@v1
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: my-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
      - uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: expo global setup
        run: npm install -g expo-cli  
      - name: Yarn Install
        if: steps.cache.outputs.cache-hit != 'true' || steps.submodule-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: expo hotfix
        run: yarn add -D @pmmmwh/react-refresh-webpack-plugin react-refresh 
      - uses: cypress-io/github-action@v2
        with:
          command: 'yarn stage:web && cd web-build  && http-server'
          wait-on: 'npx wait-on --timeout 5000 http://localhost:8080'
          headless: true
#   setup-linux:
#     name: Setup - Linux
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2-beta
#         with:
#           node-version: "14.13.1"
#       - uses: actions/cache@v2
#         id: cache
#         with:
#           path: node_modules
#           key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
#       - name: Yarn Install
#         if: steps.cache.outputs.cache-hit != 'true' || steps.submodule-cache.outputs.cache-hit != 'true'
#         run: yarn install
#   test-lint:
#     name: Test - Lint
#     runs-on: ubuntu-latest
#     needs: setup-linux
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2-beta
#         with:
#           node-version: "14.13.1"
#       - uses: actions/cache@v2
#         id: cache
#         with:
#           path: node_modules
#           key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
#       - name: Yarn Install
#         if: steps.cache.outputs.cache-hit != 'true' || steps.submodule-cache.outputs.cache-hit != 'true'
#         run: yarn install
#       - name: Lint
#         run: yarn lint
#       - name: Lint Report
#         run: yarn lint-report
#       - name: Test with coverage
#         run: yarn coverage
#       - name: Coveralls
#         uses: coverallsapp/github-action@master
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}

